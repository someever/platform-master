<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanfandou.platform.serv.billing.dao.RepairOrderMapper" >
  <resultMap id="BaseResultMap" type="com.fanfandou.platform.api.billing.entity.RepairOrder" >
    <id column="repair_order_id" property="repairOrderId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="game_id" property="gameId" jdbcType="INTEGER" />
    <result column="site_id" property="siteId" jdbcType="INTEGER" />
    <result column="repair_reason" property="repairReason" jdbcType="VARCHAR" />
    <result column="repair_time" property="repairTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    repair_order_id, order_id, user_id, role_id, game_id, site_id, repair_reason, repair_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="com.fanfandou.platform.api.billing.entity.RepairOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from repair_order
    where repair_order_id = #{repairOrderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from repair_order
    where repair_order_id = #{repairOrderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fanfandou.platform.api.billing.entity.RepairOrder" >
    insert into repair_order (repair_order_id, order_id, user_id, role_id,
      game_id, site_id, repair_reason, 
      repair_time)
    values (#{repairOrderId,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT},
    #{gameId,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{repairReason,jdbcType=VARCHAR},
      #{repairTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fanfandou.platform.api.billing.entity.RepairOrder" >
    insert into repair_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="repairOrderId != null" >
        repair_order_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="siteId != null" >
        site_id,
      </if>
      <if test="repairReason != null" >
        repair_reason,
      </if>
      <if test="repairTime != null" >
        repair_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="repairOrderId != null" >
        #{repairOrderId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="repairReason != null" >
        #{repairReason,jdbcType=VARCHAR},
      </if>
      <if test="repairTime != null" >
        #{repairTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fanfandou.platform.api.billing.entity.RepairOrderExample"
          resultType="java.lang.Integer" >
    select count(*) from repair_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repair_order
    <set >
      <if test="record.repairOrderId != null" >
        repair_order_id = #{record.repairOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.gameId != null" >
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.siteId != null" >
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.repairReason != null" >
        repair_reason = #{record.repairReason,jdbcType=VARCHAR},
      </if>
      <if test="record.repairTime != null" >
        repair_time = #{record.repairTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repair_order
    set repair_order_id = #{record.repairOrderId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT},
      game_id = #{record.gameId,jdbcType=INTEGER},
      site_id = #{record.siteId,jdbcType=INTEGER},
      repair_reason = #{record.repairReason,jdbcType=VARCHAR},
      repair_time = #{record.repairTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fanfandou.platform.api.billing.entity.RepairOrder" >
    update repair_order
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null" >
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="repairReason != null" >
        repair_reason = #{repairReason,jdbcType=VARCHAR},
      </if>
      <if test="repairTime != null" >
        repair_time = #{repairTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where repair_order_id = #{repairOrderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fanfandou.platform.api.billing.entity.RepairOrder" >
    update repair_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      game_id = #{gameId,jdbcType=INTEGER},
      site_id = #{siteId,jdbcType=INTEGER},
      repair_reason = #{repairReason,jdbcType=VARCHAR},
      repair_time = #{repairTime,jdbcType=TIMESTAMP}
    where repair_order_id = #{repairOrderId,jdbcType=INTEGER}
  </update>
</mapper>