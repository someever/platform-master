// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from proto

package com.fanfandou.platform.serv.game.entity.tol.account;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.Objects;


@Generated("java_bean")
public final class Msg_Center2Account_Logout_Req implements Externalizable, Message<Msg_Center2Account_Logout_Req>, Schema<Msg_Center2Account_Logout_Req>
{

    public static Schema<Msg_Center2Account_Logout_Req> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static Msg_Center2Account_Logout_Req getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final Msg_Center2Account_Logout_Req DEFAULT_INSTANCE = new Msg_Center2Account_Logout_Req();

    
    private Integer mAccountId;
    private Integer mServerId;
    private Long mTimeLogout;
    private String mName;
    private Integer mHead;
    private Integer mSummonerLv;

    public Msg_Center2Account_Logout_Req()
    {

    }

    // getters and setters

    // mAccountId

    public Integer getMAccountId()
    {
        return mAccountId;
    }


    public void setMAccountId(Integer mAccountId)
    {
        this.mAccountId = mAccountId;
    }

    // mServerId

    public Integer getMServerId()
    {
        return mServerId;
    }


    public void setMServerId(Integer mServerId)
    {
        this.mServerId = mServerId;
    }

    // mTimeLogout

    public Long getMTimeLogout()
    {
        return mTimeLogout;
    }


    public void setMTimeLogout(Long mTimeLogout)
    {
        this.mTimeLogout = mTimeLogout;
    }

    // mName

    public String getMName()
    {
        return mName;
    }


    public void setMName(String mName)
    {
        this.mName = mName;
    }

    // mHead

    public Integer getMHead()
    {
        return mHead;
    }


    public void setMHead(Integer mHead)
    {
        this.mHead = mHead;
    }

    // mSummonerLv

    public Integer getMSummonerLv()
    {
        return mSummonerLv;
    }


    public void setMSummonerLv(Integer mSummonerLv)
    {
        this.mSummonerLv = mSummonerLv;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || this.getClass() != obj.getClass()) {
            return false;
        }
        final Msg_Center2Account_Logout_Req that = (Msg_Center2Account_Logout_Req) obj;
        return
                Objects.equals(this.mAccountId, that.mAccountId) &&
                Objects.equals(this.mServerId, that.mServerId) &&
                Objects.equals(this.mTimeLogout, that.mTimeLogout) &&
                Objects.equals(this.mName, that.mName) &&
                Objects.equals(this.mHead, that.mHead) &&
                Objects.equals(this.mSummonerLv, that.mSummonerLv);
    }

    @Override
    public int hashCode() {
        return Objects.hash(mAccountId, mServerId, mTimeLogout, mName, mHead, mSummonerLv);
    }

    @Override
    public String toString() {
        return "Msg_Center2Account_Logout_Req{" +
                    "mAccountId=" + mAccountId +
                    ", mServerId=" + mServerId +
                    ", mTimeLogout=" + mTimeLogout +
                    ", mName=" + mName +
                    ", mHead=" + mHead +
                    ", mSummonerLv=" + mSummonerLv +
                '}';
    }
    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<Msg_Center2Account_Logout_Req> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public Msg_Center2Account_Logout_Req newMessage()
    {
        return new Msg_Center2Account_Logout_Req();
    }

    public Class<Msg_Center2Account_Logout_Req> typeClass()
    {
        return Msg_Center2Account_Logout_Req.class;
    }

    public String messageName()
    {
        return Msg_Center2Account_Logout_Req.class.getSimpleName();
    }

    public String messageFullName()
    {
        return Msg_Center2Account_Logout_Req.class.getName();
    }

    public boolean isInitialized(Msg_Center2Account_Logout_Req message)
    {
        return true;
    }

    public void mergeFrom(Input input, Msg_Center2Account_Logout_Req message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.mAccountId = input.readUInt32();
                    break;
                case 2:
                    message.mServerId = input.readUInt32();
                    break;
                case 3:
                    message.mTimeLogout = input.readUInt64();
                    break;
                case 4:
                    message.mName = input.readString();
                    break;
                case 5:
                    message.mHead = input.readUInt32();
                    break;
                case 6:
                    message.mSummonerLv = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, Msg_Center2Account_Logout_Req message) throws IOException
    {
        if(message.mAccountId != null)
            output.writeUInt32(1, message.mAccountId, false);

        if(message.mServerId != null)
            output.writeUInt32(2, message.mServerId, false);

        if(message.mTimeLogout != null)
            output.writeUInt64(3, message.mTimeLogout, false);

        if(message.mName != null)
            output.writeString(4, message.mName, false);

        if(message.mHead != null)
            output.writeUInt32(5, message.mHead, false);

        if(message.mSummonerLv != null)
            output.writeUInt32(6, message.mSummonerLv, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    

}
