// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from proto

package com.fanfandou.platform.serv.game.entity.tol.account;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.Objects;


@Generated("java_bean")
public final class Msg_Account2Center_AntiAddiction_Req implements Externalizable, Message<Msg_Account2Center_AntiAddiction_Req>, Schema<Msg_Account2Center_AntiAddiction_Req>
{

    public static Schema<Msg_Account2Center_AntiAddiction_Req> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static Msg_Account2Center_AntiAddiction_Req getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final Msg_Account2Center_AntiAddiction_Req DEFAULT_INSTANCE = new Msg_Account2Center_AntiAddiction_Req();

    
    private Integer mAccountId;
    private Integer mServerId;
    private Integer mTimeUsed;

    public Msg_Account2Center_AntiAddiction_Req()
    {

    }

    // getters and setters

    // mAccountId

    public Integer getMAccountId()
    {
        return mAccountId;
    }


    public void setMAccountId(Integer mAccountId)
    {
        this.mAccountId = mAccountId;
    }

    // mServerId

    public Integer getMServerId()
    {
        return mServerId;
    }


    public void setMServerId(Integer mServerId)
    {
        this.mServerId = mServerId;
    }

    // mTimeUsed

    public Integer getMTimeUsed()
    {
        return mTimeUsed;
    }


    public void setMTimeUsed(Integer mTimeUsed)
    {
        this.mTimeUsed = mTimeUsed;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || this.getClass() != obj.getClass()) {
            return false;
        }
        final Msg_Account2Center_AntiAddiction_Req that = (Msg_Account2Center_AntiAddiction_Req) obj;
        return
                Objects.equals(this.mAccountId, that.mAccountId) &&
                Objects.equals(this.mServerId, that.mServerId) &&
                Objects.equals(this.mTimeUsed, that.mTimeUsed);
    }

    @Override
    public int hashCode() {
        return Objects.hash(mAccountId, mServerId, mTimeUsed);
    }

    @Override
    public String toString() {
        return "Msg_Account2Center_AntiAddiction_Req{" +
                    "mAccountId=" + mAccountId +
                    ", mServerId=" + mServerId +
                    ", mTimeUsed=" + mTimeUsed +
                '}';
    }
    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<Msg_Account2Center_AntiAddiction_Req> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public Msg_Account2Center_AntiAddiction_Req newMessage()
    {
        return new Msg_Account2Center_AntiAddiction_Req();
    }

    public Class<Msg_Account2Center_AntiAddiction_Req> typeClass()
    {
        return Msg_Account2Center_AntiAddiction_Req.class;
    }

    public String messageName()
    {
        return Msg_Account2Center_AntiAddiction_Req.class.getSimpleName();
    }

    public String messageFullName()
    {
        return Msg_Account2Center_AntiAddiction_Req.class.getName();
    }

    public boolean isInitialized(Msg_Account2Center_AntiAddiction_Req message)
    {
        return true;
    }

    public void mergeFrom(Input input, Msg_Account2Center_AntiAddiction_Req message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.mAccountId = input.readUInt32();
                    break;
                case 2:
                    message.mServerId = input.readUInt32();
                    break;
                case 3:
                    message.mTimeUsed = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, Msg_Account2Center_AntiAddiction_Req message) throws IOException
    {
        if(message.mAccountId != null)
            output.writeUInt32(1, message.mAccountId, false);

        if(message.mServerId != null)
            output.writeUInt32(2, message.mServerId, false);

        if(message.mTimeUsed != null)
            output.writeUInt32(3, message.mTimeUsed, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    

}
