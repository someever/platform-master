<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanfandou.platform.serv.activity.dao.GameActivityConMapper">
    <resultMap id="BaseResultMap" type="com.fanfandou.platform.api.activity.entity.GameActivityCon">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="activity_name" property="activityName" jdbcType="VARCHAR"/>
        <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="redundancy" property="redundancy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="game_id" property="gameId" jdbcType="INTEGER"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="game_activity_id" property="gameActivityId" jdbcType="INTEGER"/>
        <result column="task_ids" property="taskIds" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.fanfandou.platform.api.activity.entity.GameActivityCon"
               extends="BaseResultMap">
        <result column="activity_json" property="activityJson" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, activity_name, begin_time, end_time, redundancy,create_time,game_id,area_id,game_activity_id,task_ids,type
  </sql>
    <sql id="Blob_Column_List">
    activity_json
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.fanfandou.platform.api.activity.entity.GameActivityConExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from game_activity_con
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.fanfandou.platform.api.activity.entity.GameActivityConExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from game_activity_con
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from game_activity_con
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from game_activity_con
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.fanfandou.platform.api.activity.entity.GameActivityCon">
    insert into game_activity_con (id, activity_name, begin_time, 
      end_time, redundancy, activity_json,create_time,game_id,area_id,game_activity_id,task_ids,type
      )
    values (#{id,jdbcType=INTEGER}, #{activityName,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{redundancy,jdbcType=VARCHAR}, #{activityJson,jdbcType=LONGVARCHAR},
      #{createTime,jdbcType=TIMESTAMP},#{gameId,jdbcType=INTEGER},#{areaId,jdbcType=VARCHAR},#{gameActivityId,jdbcType=INTEGER},#{taskIds,jdbcType=VARCHAR},#{type,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.fanfandou.platform.api.activity.entity.GameActivityCon">
        insert into game_activity_con
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="activityName != null">
                activity_name,
            </if>
            <if test="beginTime != null">
                begin_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="redundancy != null">
                redundancy,
            </if>
            <if test="activityJson != null">
                activity_json,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="gameId != null">
                game_id,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="gameActivityId != null">
                game_activity_id,
            </if>
            <if test="taskIds != null">
                task_ids,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="activityName != null">
                #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="redundancy != null">
                #{redundancy,jdbcType=VARCHAR},
            </if>
            <if test="activityJson != null">
                #{activityJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="gameId != null">
                #{gameId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="gameActivityId != null">
                #{gameActivityId,jdbcType=INTEGER},
            </if>
            <if test="taskIds != null">
                #{taskIds,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fanfandou.platform.api.activity.entity.GameActivityConExample"
            resultType="java.lang.Integer">
        select count(*) from game_activity_con
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update game_activity_con
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.activityName != null">
                activity_name = #{record.activityName,jdbcType=VARCHAR},
            </if>
            <if test="record.beginTime != null">
                begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.redundancy != null">
                redundancy = #{record.redundancy,jdbcType=VARCHAR},
            </if>
            <if test="record.activityJson != null">
                activity_json = #{record.activityJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gameId != null">
                game_id = #{record.gameId,jdbcType=INTEGER},
            </if>
            <if test="record.areaId != null">
                area_id = #{record.areaId,jdbcType=VARCHAR},
            </if>
            <if test="record.gameActivityId != null">
                game_activity_id = #{gameActivityId,jdbcType=INTEGER},
            </if>
            <if test="record.taskIds != null">
                task_ids = #{taskIds,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{type,jdbcType=INTEGER},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update game_activity_con
        set id = #{record.id,jdbcType=INTEGER},
        activity_name = #{record.activityName,jdbcType=VARCHAR},
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        redundancy = #{record.redundancy,jdbcType=VARCHAR},
        activity_json = #{record.activityJson,jdbcType=LONGVARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        game_id = #{record.gameId,jdbcType=INTEGER},
        area_id = #{record.areaId,jdbcType=VARCHAR},
        game_activity_id = #{record.gameActivityId,jdbcType=INTEGER},
        task_ids= #{record.taskIds,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update game_activity_con
        set id = #{record.id,jdbcType=INTEGER},
        activity_name = #{record.activityName,jdbcType=VARCHAR},
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        redundancy = #{record.redundancy,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        game_id = #{record.gameId,jdbcType=INTEGER},
        area_id = #{record.areaId,jdbcType=VARCHAR},
        game_activity_id = #{record.gameActivityId,jdbcType=INTEGER},
        task_ids = #{record.taskIds,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.fanfandou.platform.api.activity.entity.GameActivityCon">
        update game_activity_con
        <set>
            <if test="activityName != null">
                activity_name = #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="redundancy != null">
                redundancy = #{redundancy,jdbcType=VARCHAR},
            </if>
            <if test="activityJson != null">
                activity_json = #{activityJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="gameId != null">
                game_id = #{gameId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="gameActivityId != null">
                game_activity_id = #{gameActivityId,jdbcType=INTEGER},
            </if>
            <if test="taskIds != null">
                task_ids = #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="com.fanfandou.platform.api.activity.entity.GameActivityCon">
    update game_activity_con
    set activity_name = #{activityName,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      redundancy = #{redundancy,jdbcType=VARCHAR},
      activity_json = #{activityJson,jdbcType=LONGVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      game_id = #{gameId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=VARCHAR},
      game_activity_id = #{gameActivityId,jdbcType=INTEGER},
      task_ids = #{taskIds,jdbcType=VARCHAR},
       type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.fanfandou.platform.api.activity.entity.GameActivityCon">
    update game_activity_con
    set activity_name = #{activityName,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      redundancy = #{redundancy,jdbcType=VARCHAR},
      activity_json = #{activityJson,jdbcType=LONGVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      game_id = #{gameId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=VARCHAR},
      game_activity_id = #{gameActivityId,jdbcType=INTEGER},
      task_ids = #{taskIds,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="totalCount" resultType="int" parameterType="map">
        SELECT COUNT(*) FROM game_activity_con WHERE 1 = 1
        <if test="activityName != null">
            AND activity_name like concat('%',#{activityName,jdbcType=VARCHAR},'%')
        </if>
        <if test="gameId != null">
            AND game_id = #{gameId,jdbcType=INTEGER}
        </if>
        and create_time BETWEEN #{from,jdbcType=TIMESTAMP} and #{to,jdbcType=TIMESTAMP}
    </select>


    <select id="selectBySelective" resultMap="BaseResultMap" parameterType="map">
        SELECT * FROM game_activity_con WHERE 1 = 1
        <if test="activityName != null">
            AND activity_name like concat('%',#{activityName,jdbcType=VARCHAR},'%')
        </if>
        <if test="gameId != null">
            AND game_id = #{gameId,jdbcType=INTEGER}
        </if>
        and create_time BETWEEN #{from,jdbcType=TIMESTAMP} and #{to,jdbcType=TIMESTAMP}

        order by id DESC
        limit #{num1,jdbcType=INTEGER},#{num2,jdbcType=INTEGER}
    </select>
</mapper>